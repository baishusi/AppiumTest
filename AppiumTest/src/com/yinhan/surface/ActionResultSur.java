package com.yinhan.surface;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.HashMap;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import org.openqa.selenium.WebElement;

import com.yinhan.data.TestCaseBean;
import com.yinhan.util.Config;
import com.yinhan.util.HelpUtil;

public class ActionResultSur extends javax.swing.JFrame {

	private javax.swing.JButton ac_back;
	private javax.swing.JButton ac_btnClick;
	private javax.swing.JTextField ac_btncId;
	private javax.swing.JButton ac_imgClick;
	private javax.swing.JTextField ac_imgcId;
	private javax.swing.JButton ac_inEditText;
	private javax.swing.JButton ac_inKeyBoard;
	private javax.swing.JTextField ac_ineditDesc;
	private javax.swing.JTextField ac_ineditId;
	private javax.swing.JTextField ac_inkbDesc;
	private javax.swing.JButton ac_pclick;
	private javax.swing.JButton ac_swipe;
	private javax.swing.JTextField ac_swipep;
	private javax.swing.JButton ac_textClick;
	private javax.swing.JTextField ac_textDesc;
	private javax.swing.JTextField ac_textId;
	private javax.swing.JButton ac_wait;
	private javax.swing.JTextField ac_waittime;
	private javax.swing.JTextField ac_x;
	private javax.swing.JTextField ac_y;
	private javax.swing.JTextArea actionDescArea;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JScrollPane jScrollPane2;
	private javax.swing.JTextArea resultArea;
	private javax.swing.JButton rs_editNum;
	private javax.swing.JTextField rs_editNum1;
	private javax.swing.JTextField rs_editNum2;
	private javax.swing.JButton rs_picMatch;
	private javax.swing.JTextField rs_picName;
	private javax.swing.JTextField rs_picPosition;
	private javax.swing.JTextField rs_textDesc;
	private javax.swing.JTextField rs_textNum1;
	private javax.swing.JTextField rs_textNum2;
	private javax.swing.JButton rz_textName;
	private TestCaseBean testcaseBean;

	PanelBean tempPanelBean;

	public PanelBean getTempPanelBean() {
		return tempPanelBean;
	}

	public void setTempPanelBean(PanelBean tempPanelBean) {
		this.tempPanelBean = tempPanelBean;
	}

	/**
	 * Creates new form NewJFrame
	 */
	public ActionResultSur(TestCaseBean argTestcaseBean) {
		testcaseBean = argTestcaseBean;
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		rz_textName = new javax.swing.JButton();
		rs_textDesc = new javax.swing.JTextField();
		rs_textNum2 = new javax.swing.JTextField();
		ac_textClick = new javax.swing.JButton();
		ac_imgcId = new javax.swing.JTextField();
		ac_textId = new javax.swing.JTextField();
		ac_textDesc = new javax.swing.JTextField();
		ac_ineditId = new javax.swing.JTextField();
		ac_imgClick = new javax.swing.JButton();
		ac_inEditText = new javax.swing.JButton();
		ac_inkbDesc = new javax.swing.JTextField();
		ac_inKeyBoard = new javax.swing.JButton();
		ac_back = new javax.swing.JButton();
		ac_ineditDesc = new javax.swing.JTextField();
		rs_picMatch = new javax.swing.JButton();
		rs_picName = new javax.swing.JTextField();
		rs_picPosition = new javax.swing.JTextField();
		ac_swipep = new javax.swing.JTextField();
		ac_swipe = new javax.swing.JButton();
		jScrollPane1 = new javax.swing.JScrollPane();
		actionDescArea = new javax.swing.JTextArea();
		ac_x = new javax.swing.JTextField();
		ac_y = new javax.swing.JTextField();
		ac_pclick = new javax.swing.JButton();
		ac_waittime = new javax.swing.JTextField();
		ac_wait = new javax.swing.JButton();
		ac_btncId = new javax.swing.JTextField();
		ac_btnClick = new javax.swing.JButton();
		rs_editNum1 = new javax.swing.JTextField();
		rs_editNum2 = new javax.swing.JTextField();
		rs_editNum = new javax.swing.JButton();
		rs_textNum1 = new javax.swing.JTextField();
		jScrollPane2 = new javax.swing.JScrollPane();
		resultArea = new javax.swing.JTextArea();

		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

		addWindowListener(new WindowAdapter() {
			public void windowClosing(WindowEvent e) {
				saveAndExit();
			}
		});

		rz_textName.setText("text名称");
		rz_textName.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				rzTextNameActionPerformed(evt);
			}
		});

		rs_textDesc.setText("desc");

		rs_textNum2.setText("num");

		ac_textClick.setText("点击textview");
		ac_textClick.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				acClickTextActionPerformed(evt);
			}
		});

		ac_imgcId.setText("ID");

		ac_textId.setText("ID");

		ac_textDesc.setText("desc");

		ac_ineditId.setText("ID");

		ac_imgClick.setText("点击imaview");
		ac_imgClick.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				acClickImgActionPerformed(evt);
			}
		});

		ac_inEditText.setText("输入edittext");
		ac_inEditText.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				acInEditActionPerformed(evt);
			}
		});

		ac_inkbDesc.setText("desc");

		ac_inKeyBoard.setText("键盘输入");
		ac_inKeyBoard.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				acInKeyBoardActionPerformed(evt);
			}
		});

		ac_back.setText("返回");
		ac_back.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				acBackActionPerformed(evt);
			}
		});

		ac_ineditDesc.setText("desc");

		rs_picMatch.setText("匹配图片");
		rs_picMatch.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				rsPicMatchActionPerformed(evt);
			}
		});

		rs_picMatch.setToolTipText("");

		rs_picName.setText("picname");

		rs_picPosition.setText("position");

		ac_swipep.setText("position");

		ac_swipe.setText("滑动");
		ac_swipe.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				acSwpieActionPerformed(evt);
			}
		});

		actionDescArea.setColumns(20);
		actionDescArea.setRows(5);
		jScrollPane1.setViewportView(actionDescArea);

		ac_x.setText("x");

		ac_y.setText("y");

		ac_pclick.setText("点击坐标");
		ac_pclick.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				actionpcClickActionPerformed(evt);
			}
		});

		ac_waittime.setText("2");

		ac_wait.setText("休息");
		ac_wait.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				acWaitActionPerformed(evt);
			}
		});

		ac_btncId.setText("ID");

		ac_btnClick.setText("点击Button");
		ac_btnClick.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				acClickBtnActionPerformed(evt);
			}
		});

		rs_editNum1.setText("num");

		rs_editNum2.setText("num");

		rs_editNum.setText("edit数目");
		rs_editNum.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				rsEditNumActionPerformed(evt);
			}
		});

		rs_textNum1.setText("num");

		resultArea.setColumns(20);
		resultArea.setRows(5);
		jScrollPane2.setViewportView(resultArea);

		showActionArea();
		showResultArea();

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addGap(38, 38, 38)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING,
												false)
												.addComponent(
														jScrollPane2,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														397, Short.MAX_VALUE)
												.addComponent(jScrollPane1))
								.addGap(46, 46, 46)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addGroup(
														layout.createSequentialGroup()
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.LEADING,
																				false)
																				.addGroup(
																						layout.createSequentialGroup()
																								.addGroup(
																										layout.createParallelGroup(
																												javax.swing.GroupLayout.Alignment.LEADING,
																												false)
																												.addComponent(
																														ac_btncId,
																														javax.swing.GroupLayout.DEFAULT_SIZE,
																														57,
																														Short.MAX_VALUE)
																												.addComponent(
																														ac_waittime,
																														javax.swing.GroupLayout.Alignment.TRAILING)
																												.addComponent(
																														ac_x,
																														javax.swing.GroupLayout.Alignment.TRAILING)
																												.addComponent(
																														ac_textId)
																												.addComponent(
																														ac_imgcId)
																												.addComponent(
																														ac_ineditId))
																								.addGap(18,
																										18,
																										18)
																								.addGroup(
																										layout.createParallelGroup(
																												javax.swing.GroupLayout.Alignment.LEADING,
																												false)
																												.addGroup(
																														layout.createSequentialGroup()
																																.addGap(18,
																																		18,
																																		18)
																																.addComponent(
																																		ac_y,
																																		javax.swing.GroupLayout.PREFERRED_SIZE,
																																		45,
																																		javax.swing.GroupLayout.PREFERRED_SIZE))
																												.addComponent(
																														ac_textDesc)
																												.addComponent(
																														ac_ineditDesc)))
																				.addComponent(
																						ac_swipep)
																				.addComponent(
																						ac_inkbDesc))
																.addGap(48, 48,
																		48)
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.LEADING)
																				.addComponent(
																						ac_swipe)
																				.addComponent(
																						ac_pclick)
																				.addComponent(
																						ac_wait)
																				.addComponent(
																						ac_btnClick)
																				.addComponent(
																						ac_textClick)
																				.addComponent(
																						ac_imgClick)
																				.addComponent(
																						ac_inEditText)
																				.addComponent(
																						ac_back)
																				.addComponent(
																						ac_inKeyBoard)))
												.addGroup(
														layout.createSequentialGroup()
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.LEADING,
																				false)
																				.addComponent(
																						rs_textNum1)
																				.addComponent(
																						rs_editNum1)
																				.addComponent(
																						rs_picName,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						66,
																						Short.MAX_VALUE))
																.addGap(18, 18,
																		18)
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.LEADING,
																				false)
																				.addComponent(
																						rs_picPosition)
																				.addComponent(
																						rs_editNum2)
																				.addComponent(
																						rs_textNum2))
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
																.addComponent(
																		rs_textDesc,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		65,
																		javax.swing.GroupLayout.PREFERRED_SIZE)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.LEADING)
																				.addComponent(
																						rz_textName)
																				.addComponent(
																						rs_editNum)
																				.addComponent(
																						rs_picMatch))))
								.addContainerGap(
										javax.swing.GroupLayout.DEFAULT_SIZE,
										Short.MAX_VALUE)));
		layout.setVerticalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addGap(42, 42, 42)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.TRAILING)
												.addGroup(
														layout.createSequentialGroup()
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.BASELINE)
																				.addComponent(
																						ac_x,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addComponent(
																						ac_y,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addComponent(
																						ac_pclick))
																.addGap(18, 18,
																		18)
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.BASELINE)
																				.addComponent(
																						ac_waittime,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addComponent(
																						ac_wait))
																.addGap(18, 18,
																		18)
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.BASELINE)
																				.addComponent(
																						ac_btncId,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addComponent(
																						ac_btnClick))
																.addGap(18, 18,
																		18)
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.BASELINE)
																				.addComponent(
																						ac_textId,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addComponent(
																						ac_textDesc,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addComponent(
																						ac_textClick))
																.addGap(18, 18,
																		18)
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.BASELINE)
																				.addComponent(
																						ac_imgcId,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addComponent(
																						ac_imgClick))
																.addGap(18, 18,
																		18)
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.BASELINE)
																				.addComponent(
																						ac_inEditText)
																				.addComponent(
																						ac_ineditId,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addComponent(
																						ac_ineditDesc,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						javax.swing.GroupLayout.PREFERRED_SIZE))
																.addGap(18, 18,
																		18)
																.addComponent(
																		ac_back)
																.addGap(18, 18,
																		18)
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.BASELINE)
																				.addComponent(
																						ac_inKeyBoard)
																				.addComponent(
																						ac_inkbDesc,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						javax.swing.GroupLayout.PREFERRED_SIZE))
																.addGap(18, 18,
																		18)
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.LEADING)
																				.addComponent(
																						ac_swipep,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addComponent(
																						ac_swipe)))
												.addGroup(
														layout.createSequentialGroup()
																.addComponent(
																		jScrollPane1,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		349,
																		javax.swing.GroupLayout.PREFERRED_SIZE)
																.addGap(2, 2, 2)))
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addGroup(
														layout.createSequentialGroup()
																.addGap(50, 50,
																		50)
																.addComponent(
																		jScrollPane2,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		165,
																		javax.swing.GroupLayout.PREFERRED_SIZE)
																.addContainerGap(
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		Short.MAX_VALUE))
												.addGroup(
														javax.swing.GroupLayout.Alignment.TRAILING,
														layout.createSequentialGroup()
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.BASELINE)
																				.addComponent(
																						rs_editNum1,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addComponent(
																						rs_editNum2,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addComponent(
																						rs_editNum))
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.BASELINE)
																				.addComponent(
																						rs_textNum1,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addComponent(
																						rs_textNum2,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addComponent(
																						rs_textDesc,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addComponent(
																						rz_textName))
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.BASELINE)
																				.addComponent(
																						rs_picName,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addComponent(
																						rs_picPosition,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addComponent(
																						rs_picMatch))
																.addGap(47, 47,
																		47)))));
		pack();
	}// </editor-fold>

	private void showActionArea() {
		Config.log.info("show action area");
		String actionString = "";
		if (testcaseBean.getAcitons() == null) {
			actionDescArea.setText(actionString);
			return;
		}
		for (int j = 0; j < testcaseBean.getAcitons().length; j++) {
			try {
				switch (Integer.parseInt(testcaseBean.getAcitons()[j]
						.split(Config.COLON)[0])) {
				case Config.ACTION_CLICK:
					actionString = actionString + Config.ACTIONDESCCHINESE_1
							+ Config.COLON;
					actionString = actionString
							+ testcaseBean.getAcitons()[j].split(Config.COLON)[1]
							+ "\n";
					break;
				case Config.ACTION_WAIT:
					actionString = actionString + Config.ACTIONDESCCHINESE_2
							+ Config.COLON;
					actionString = actionString
							+ testcaseBean.getAcitons()[j].split(Config.COLON)[1]
							+ "秒" + "\n";
					break;
				case Config.ACTION_CLICKBUTTON:
					actionString = actionString + Config.ACTIONDESCCHINESE_3
							+ Config.COLON;
					actionString = actionString
							+ "第"
							+ testcaseBean.getAcitons()[j].split(Config.COLON)[1]
							+ "个button" + "\n";
					break;
				case Config.ACITON_CLICKTEXT:
					actionString = actionString + Config.ACTIONDESCCHINESE_4
							+ Config.COLON;
					if ("n".equals(testcaseBean.getAcitons()[j]
							.split(Config.COLON)[1].split(Config.COMMA)[0])) {
						actionString = actionString
								+ testcaseBean.getAcitons()[j]
										.split(Config.COLON)[1]
										.split(Config.COMMA)[1] + "\n";
					} else {
						actionString = actionString
								+ "第"
								+ testcaseBean.getAcitons()[j]
										.split(Config.COLON)[1] + "个textview"
								+ "\n";
					}

					break;
				case Config.ACTION_CLICKIMAGE:
					actionString = actionString + Config.ACTIONDESCCHINESE_5
							+ Config.COLON;
					actionString = actionString
							+ "第"
							+ testcaseBean.getAcitons()[j].split(Config.COLON)[1]
							+ "个imageview" + "\n";
					break;
				case Config.ACTION_INEDITTEXT:
					actionString = actionString + Config.ACTIONDESCCHINESE_6
							+ Config.COLON;
					for (int i = 0; i < testcaseBean.getAcitons()[j]
							.split(Config.COLON)[1].split(Config.COMMA).length; i++) {
						if (i % 2 == 0) {
							actionString = actionString
									+ "第"
									+ testcaseBean.getAcitons()[j]
											.split(Config.COLON)[1]
											.split(Config.COMMA)[i]
									+ "个edittext输入"
									+ testcaseBean.getAcitons()[j]
											.split(Config.COLON)[1]
											.split(Config.COMMA)[i + 1];

						}
					}
					actionString = actionString + "\n";
					break;
				case Config.ACTION_BACK:
					actionString = actionString + Config.ACTIONDESCCHINESE_7
							+ Config.COLON;
					actionString = actionString + "\n";
					break;
				case Config.ACTION_INKEYBOARD:
					actionString = actionString + Config.ACTIONDESCCHINESE_8
							+ Config.COLON;
					actionString = actionString
							+ testcaseBean.getAcitons()[j].split(Config.COLON)[1]
							+ "\n";
					break;
				case Config.ACTION_SWIPE:
					actionString = actionString + Config.ACTIONDESCCHINESE_9
							+ Config.COLON;
					actionString = actionString
							+ testcaseBean.getAcitons()[j].split(Config.COLON)[1]
							+ "\n";
					break;

				}
			} catch (NumberFormatException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

		}

		actionDescArea.setText(actionString);
	}

	private void showResultArea() {
		Config.log.info("show result area");
		String resultString = "";
		if (testcaseBean.getTestResult() == null) {
			resultArea.setText(resultString);
			return;
		}
		switch (Integer.parseInt(testcaseBean.getTestResult()[0])) {
		case Config.RESULT_EDITTEXTNUM:
			if ("n".equals(testcaseBean.getTestResult()[1].split(Config.COMMA)[0])) {
				resultString = resultString + "edittext数目不为" + Config.COLON;
				resultString = resultString
						+ testcaseBean.getTestResult()[1].split(Config.COMMA)[1]
						+ "\n";
			} else {
				resultString = resultString + "edittext数目" + Config.COLON;
				resultString = resultString + testcaseBean.getTestResult()[1]
						+ "\n";
			}

			break;
		case Config.RESULT_TEXTVIEWNAME:
			if ("n".equals(testcaseBean.getTestResult()[1].split(Config.COMMA)[0])) {
				resultString = resultString
						+ "第"
						+ testcaseBean.getTestResult()[1].split(Config.COMMA)[1]
						+ "个textview名字不为" + Config.COLON;
				resultString = resultString
						+ testcaseBean.getTestResult()[1].split(Config.COMMA)[2]
						+ "\n";
			} else {
				resultString = resultString
						+ "第"
						+ testcaseBean.getTestResult()[1].split(Config.COMMA)[0]
						+ "个textview名字为" + Config.COLON;
				resultString = resultString
						+ testcaseBean.getTestResult()[1].split(Config.COMMA)[1]
						+ "\n";
			}

			break;
		case Config.RESULT_MATCHPIC:
			resultString = resultString + "匹配图片" + Config.COLON;
			resultString = resultString + testcaseBean.getTestResult()[1];
			break;
		}

		resultArea.setText(resultString);
	}

	private void actionpcClickActionPerformed(java.awt.event.ActionEvent evt) {
		String tempString = actionDescArea.getText()
				+ Config.ACTIONDESCCHINESE_1 + Config.COLON + ac_x.getText()
				+ Config.COMMA + ac_y.getText() + "\n";
		actionDescArea.setText(tempString);
		testcaseBean.setAcitons(handleActionStringToArr());
		showActionArea();
	}

	private void acWaitActionPerformed(java.awt.event.ActionEvent evt) {
		String tempString = actionDescArea.getText()
				+ Config.ACTIONDESCCHINESE_2 + Config.COLON
				+ ac_waittime.getText() + "秒" + "\n";
		actionDescArea.setText(tempString);
		testcaseBean.setAcitons(handleActionStringToArr());
		showActionArea();
	}

	private void acClickBtnActionPerformed(java.awt.event.ActionEvent evt) {
		String tempString = actionDescArea.getText()
				+ Config.ACTIONDESCCHINESE_3 + Config.COLON + "第"
				+ ac_btncId.getText() + "个button" + "\n";
		actionDescArea.setText(tempString);
		testcaseBean.setAcitons(handleActionStringToArr());
		showActionArea();
	}

	private void acClickTextActionPerformed(java.awt.event.ActionEvent evt) {
		String tempString = "";
		if ("n".equals(ac_textId.getText())) {

			tempString = actionDescArea.getText() + Config.ACTIONDESCCHINESE_4
					+ Config.COLON + ac_textDesc.getText() + "\n";
		} else {
			tempString = actionDescArea.getText() + Config.ACTIONDESCCHINESE_4
					+ Config.COLON + ac_textId.getText() + "\n";
		}
		actionDescArea.setText(tempString);
		testcaseBean.setAcitons(handleActionStringToArr());
		showActionArea();

	}

	private void acClickImgActionPerformed(java.awt.event.ActionEvent evt) {
		String tempString = actionDescArea.getText()
				+ Config.ACTIONDESCCHINESE_5 + Config.COLON + "第"
				+ ac_imgcId.getText() + "个imageview" + "\n";
		actionDescArea.setText(tempString);
		testcaseBean.setAcitons(handleActionStringToArr());
		showActionArea();

	}

	private void acInEditActionPerformed(java.awt.event.ActionEvent evt) {
		String tempString = actionDescArea.getText()
				+ Config.ACTIONDESCCHINESE_6 + Config.COLON + "第"
				+ ac_ineditId.getText() + "个edittext输入"
				+ ac_ineditDesc.getText() + "\n";
		actionDescArea.setText(tempString);
		testcaseBean.setAcitons(handleActionStringToArr());
		showActionArea();

	}

	private void acInKeyBoardActionPerformed(java.awt.event.ActionEvent evt) {
		String tempString = actionDescArea.getText()
				+ Config.ACTIONDESCCHINESE_8 + Config.COLON
				+ ac_inkbDesc.getText() + "\n";
		actionDescArea.setText(tempString);
		testcaseBean.setAcitons(handleActionStringToArr());
		showActionArea();
	}

	private void acBackActionPerformed(java.awt.event.ActionEvent evt) {
		String tempString = actionDescArea.getText()
				+ Config.ACTIONDESCCHINESE_7 + Config.COLON + "\n";
		actionDescArea.setText(tempString);
		testcaseBean.setAcitons(handleActionStringToArr());
		showActionArea();
	}

	private void acSwpieActionPerformed(java.awt.event.ActionEvent evt) {
		String tempString = actionDescArea.getText()
				+ Config.ACTIONDESCCHINESE_8 + Config.COLON
				+ ac_swipep.getText() + "\n";
		actionDescArea.setText(tempString);
		testcaseBean.setAcitons(handleActionStringToArr());
		showActionArea();
	}

	private void rsPicMatchActionPerformed(java.awt.event.ActionEvent evt) {
		String tempString = resultArea.getText() + "匹配图片" + Config.COLON
				+ rs_picName.getText() + Config.COMMA
				+ rs_picPosition.getText() + "\n";
		resultArea.setText(tempString);
		testcaseBean.setTestResult(handleResultStringToArr());
		showResultArea();
	}

	private void rzTextNameActionPerformed(java.awt.event.ActionEvent evt) {
		String tempString = "";
		if ("n".equals(rs_textNum1.getText())) {
			tempString = resultArea.getText() + "第" + rs_textNum2.getText()
					+ "个textview名字不为" + Config.COLON + rs_textDesc.getText()
					+ "\n";
		} else {
			tempString = resultArea.getText() + "第" + rs_textNum1.getText()
					+ "个textview名字为" + Config.COLON + rs_textNum2.getText()
					+ "\n";
		}
		resultArea.setText(tempString);
		testcaseBean.setTestResult(handleResultStringToArr());
		showResultArea();
	}

	private void rsEditNumActionPerformed(java.awt.event.ActionEvent evt) {
		String tempString = "";
		if ("n".equals(rs_editNum1.getText())) {
			tempString = resultArea.getText() + "edittext数目不为" + Config.COLON
					+ rs_editNum2.getText() + "\n";
		} else {
			tempString = resultArea.getText() + "edittext数目" + Config.COLON
					+ rs_editNum1.getText() + "\n";
		}
		resultArea.setText(tempString);
		testcaseBean.setTestResult(handleResultStringToArr());
		showResultArea();
	}

	public TestCaseBean getTestcaseBean() {
		return testcaseBean;
	}

	public void setTestcaseBean(TestCaseBean testcaseBean) {
		this.testcaseBean = testcaseBean;
	}

	private String[] handleActionStringToArr() {
		Config.log.info("make actionstring to array");
		String[] actionArr = null;
		actionArr = actionDescArea.getText().split("\n");
		String acbeginString = "";
		String acendString = "";

		// 整理action
		for (int i = 0; i < actionArr.length; i++) {
			acbeginString = actionArr[i].split(Config.COLON)[0];
			if (Config.ACTIONDESCCHINESE_1.equals(acbeginString)) {
				actionArr[i] = Config.ACTION_CLICK + Config.COLON
						+ actionArr[i].split(Config.COLON)[1];
			} else if (Config.ACTIONDESCCHINESE_2.equals(acbeginString)) {
				acendString = actionArr[i].split(Config.COLON)[1].replaceAll(
						"秒", "");
				actionArr[i] = Config.ACTION_WAIT + Config.COLON + acendString;
			} else if (Config.ACTIONDESCCHINESE_3.equals(acbeginString)) {
				acendString = actionArr[i].split(Config.COLON)[1].replaceAll(
						"第", "");
				acendString = acendString.replaceAll("个button", "");
				actionArr[i] = Config.ACTION_CLICKBUTTON + Config.COLON
						+ acendString;

			} else if (Config.ACTIONDESCCHINESE_4.equals(acbeginString)) {
				if (actionArr[i].split(Config.COLON)[1].contains("textview")) {
					acendString = actionArr[i].split(Config.COLON)[1]
							.replaceAll("第", "");
					acendString = acendString.replaceAll("个textview", "");
					actionArr[i] = Config.ACITON_CLICKTEXT + Config.COLON
							+ acendString;
				} else {
					actionArr[i] = Config.ACITON_CLICKTEXT + Config.COLON
							+ "n," + actionArr[i].split(Config.COLON)[1];
				}

			} else if (Config.ACTIONDESCCHINESE_5.equals(acbeginString)) {
				acendString = actionArr[i].split(Config.COLON)[1].replaceAll(
						"第", "");
				acendString = acendString.replaceAll("个imageview", "");
				actionArr[i] = Config.ACTION_CLICKIMAGE + Config.COLON
						+ acendString;
			} else if (Config.ACTIONDESCCHINESE_6.equals(acbeginString)) {
				acendString = actionArr[i].split(Config.COLON)[1].replaceAll(
						"第", ",");
				acendString = acendString.replaceAll("个edittext输入", ",");
				acendString = acendString.substring(1, acendString.length());
				actionArr[i] = Config.ACTION_INEDITTEXT + Config.COLON
						+ acendString;

			} else if (Config.ACTIONDESCCHINESE_7.equals(acbeginString)) {
				actionArr[i] = Config.ACTION_BACK + "";
			} else if (Config.ACTIONDESCCHINESE_8.equals(acbeginString)) {
				actionArr[i] = Config.ACTION_CLICK + Config.COLON
						+ actionArr[i].split(Config.COLON)[1];
			} else if (Config.ACTIONDESCCHINESE_9.equals(acbeginString)) {
				actionArr[i] = Config.ACTION_CLICK + Config.COLON
						+ actionArr[i].split(Config.COLON)[1];
			}

		}

		return actionArr;
	}

	private String[] handleResultStringToArr() {
		
		Config.log.info("make result string to array");
		String[] resultArr = new String[2];

		// 整理结果
		String rsendString = resultArea.getText().split("\n")[0];
		if (resultArea.getText().contains("匹配图片")) {
			resultArr[0] = Config.RESULT_MATCHPIC + "";
			resultArr[1] = rsendString.replaceAll("匹配图片:", "");
		} else if (resultArea.getText().contains("textview")) {
			if (resultArea.getText().contains("不")) {
				rsendString = rsendString.replaceAll("第", "");
				rsendString = rsendString.replaceAll("个textview名字不为", "");
				rsendString = rsendString.replaceAll(":", ",");
				resultArr[0] = Config.RESULT_TEXTVIEWNAME + "";
				resultArr[1] = "n," + rsendString;
			} else {
				rsendString = rsendString.replaceAll("第", "");
				rsendString = rsendString.replaceAll("个textview名字为", "");
				rsendString = rsendString.replaceAll(":", ",");
				resultArr[0] = Config.RESULT_TEXTVIEWNAME + "";
				resultArr[1] = rsendString;
			}

		} else if (resultArea.getText().contains("edittext")) {
			if (resultArea.getText().contains("不")) {
				rsendString = rsendString.replaceAll("edittext数目不为", "");
				rsendString = rsendString.replaceAll(":", "");
				resultArr[0] = Config.RESULT_EDITTEXTNUM + "";
				resultArr[1] = "n," + rsendString;
			} else {
				rsendString = rsendString.replaceAll("edittext数目", "");
				rsendString = rsendString.replaceAll(":", "");
				resultArr[0] = Config.RESULT_EDITTEXTNUM + "";
				resultArr[1] = rsendString;
			}

		}

		return resultArr;
	}

	private void saveAndExit() {
		Config.log.info("save and exit");
		// 传递实体
		testcaseBean.setAcitons(handleActionStringToArr());
		testcaseBean.setTestResult(handleResultStringToArr());
		tempPanelBean.setTestcaseBean(testcaseBean);
	}
}
